var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AtomicData","category":"page"},{"location":"#AtomicData","page":"Home","title":"AtomicData","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AtomicData]","category":"page"},{"location":"#AtomicData.NIST_wavenumber_to_energy-Tuple{Any}","page":"Home","title":"AtomicData.NIST_wavenumber_to_energy","text":"Parses level energy field from NIST tables. Brackets (round or square) indicate interpolated or theoretical values. Converts from wavenumber to energy.\n\n\n\n\n\n","category":"method"},{"location":"#AtomicData.get_atomic_stage-Tuple{String,Any}","page":"Home","title":"AtomicData.get_atomic_stage","text":"get_atomic_stage(element::String, stage; source=\"NIST\")\n\nReturns the level structure for a given atomic stage for element and ionisation stage stage. Uses data from the given source, returns an AtomicStage struct. Currently, the only supported source is \"NIST\", using locally-saved data obtained from the NIST Atomic Spectra Database Levels Form.\n\nExamples\n\njulia> MgII = get_atomic_stage(\"Mg\", \"II\")\nAtomicStage(\"Mg\", \"Mg_II\", 2, II, 137, (...))\n\njulia> MgII = get_atomic_stage(\"Mg\", 2)\nAtomicStage(\"Mg\", \"Mg_II\", 2, II, 137, (...))\n\n\n\n\n\n","category":"method"},{"location":"#AtomicData.partition_function-Tuple{Array{var\"#s19\",N} where N where var\"#s19\"<:Real,Array{var\"#s20\",1} where var\"#s20\"<:(Union{Unitful.Quantity{T,𝐋^2 𝐌 𝐓^-2,U}, Unitful.Level{L,S,Unitful.Quantity{T,𝐋^2 𝐌 𝐓^-2,U}} where S where L} where U where T),Union{Unitful.Quantity{T,𝚯,U}, Unitful.Level{L,S,Unitful.Quantity{T,𝚯,U}} where S where L} where U where T}","page":"Home","title":"AtomicData.partition_function","text":"partition_function(\n    g::Array{<: Real}, χ::Array{<: Unitful.Energy, 1}, temp::Unitful.Temperature\n)\npartition_function(data::AtomicStage, temp::Unitful.Temperature)\n\nCalculate partition function from a set of levels defined by arrays of statistical weights and energies (or an AtomicStage struct), for a given temperature.\n\n\n\n\n\n","category":"method"},{"location":"#AtomicData.partition_function_interpolator-Tuple{AtomicStage,Array{var\"#s19\",N} where N where var\"#s19\"<:(Union{Unitful.Quantity{T,𝚯,U}, Unitful.Level{L,S,Unitful.Quantity{T,𝚯,U}} where S where L} where U where T)}","page":"Home","title":"AtomicData.partition_function_interpolator","text":"partition_function_interpolator(\n    atom::AtomicStage, temperatures::Array{<: Unitful.Temperature},\n)\npartition_function_interpolator(\n    element::String, stage, temperatures::Array{<: Unitful.Temperature};\n    source=\"NIST\"\n)\n\nReturns an interpolator for the partition function of a given atomic stage.\n\nArguments\n\natom: an AtomicStage structure with the data for the given stage\ntemperatures: array with temperatures used to build the interpolation table\n\nReturns\n\ninterpolator: linear interpolator object that takes temperature to give  partition function\n\n\n\n\n\n","category":"method"},{"location":"#AtomicData.read_NIST-Tuple{String,Any}","page":"Home","title":"AtomicData.read_NIST","text":"Reads NIST atomic level data saved locally. The data were extracted from the NIST Atomic Spectra Database Levels Form.\n\n\n\n\n\n","category":"method"}]
}
